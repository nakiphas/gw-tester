---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2020
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mme.fullname" . }}
  labels:
    {{- include "mme.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "mme.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          { "name": "{{ .Values.s11.name }}", "interface": "{{ .Values.s11.interface }}" },
          { "name": "{{ .Values.s1c.name }}", "interface": "{{ .Values.s1c.interface }}" }
        ]'
      labels:
        network: epc
        {{- include "mme.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: install
          image: busybox
          command: ["cp", "/etc/gw-tester/mme.yml", "/work-dir/mme.yml"]
          volumeMounts:
            - name: config
              mountPath: /etc/gw-tester/
            - name: workdir
              mountPath: /work-dir
        - name: configure
          image: busybox
          env:
            - name: sgw_s11_ip
              value: {{ .Values.sgw.s11.ip }}
            - name: pgw_s5c_ip
              value: {{ .Values.pgw.s5c.ip }}
          command:
            - "sh"
          args:
            - "/opt/gw-tester/script/init.sh"
          volumeMounts:
            - name: init-script
              mountPath: /opt/gw-tester/script
            - name: workdir
              mountPath: /etc/gw-tester
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/opt/gw-tester/bin/mme", "-config", "/etc/gw-tester/mme.yml"]
          volumeMounts:
            - name: workdir
              mountPath: /etc/gw-tester
      volumes:
        - name: init-script
          configMap:
            name: mme-init-script
        - name: workdir
          emptyDir: {}
        - name: config
          configMap:
            name: mme-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mme-init-script
data:
  init.sh: |
    s11_ip=$(ifconfig {{ .Values.s11.interface }} | awk '/inet addr/{print substr($2,6)}')
    s1c_ip=$(ifconfig {{ .Values.s1c.interface }} | awk '/inet addr/{print substr($2,6)}')

    sed -i "s|s11_ip:.*|s11_ip: \"${s11_ip}\"|g" /etc/gw-tester/mme.yml
    sed -i "s|s1c_addr:.*|s1c_addr: \"${s1c_ip}:36412\"|g" /etc/gw-tester/mme.yml

    sed -i "s|sgw_s11_ip:.*|sgw_s11_ip: \"$sgw_s11_ip\"|g" /etc/gw-tester/mme.yml
    sed -i "s|pgw_s5c_ip:.*|pgw_s5c_ip: \"$pgw_s5c_ip\"|g" /etc/gw-tester/mme.yml

    cat /etc/gw-tester/mme.yml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mme-config
data:
  mme.yml: |
    mcc: "001"
    mnc: "01"
    apn: "gw-tester.go-gtp.example"
    local_addresses:
      s1c_addr: "172.21.1.12:36412"
      s11_ip: "172.22.0.12"
    sgw_s11_ip: "172.22.0.13"
    pgw_s5c_ip: "172.25.1.14"
